plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id("com.diffplug.spotless") version("6.11.0")
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.fasterxml.jackson.core:jackson-databind' // pdf
 	implementation 'org.apache.pdfbox:pdfbox:2.0.13' // pdf



	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.1' // XML 데이터 처리를 위한 의존성
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5' // XML 데이터 처리를 위한 의존성
	implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
	implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'// XML 데이터 처리를 위한 의존성
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
spotless {
	java {
		// 사용하지 않는 import 제거
		removeUnusedImports()

		// 구글 자바 포맷 적용
		googleJavaFormat()

		indentWithTabs(2)
		indentWithSpaces(4)
		// 공백 제거
		trimTrailingWhitespace()
		// 끝부분 New Line 처리
		endWithNewline()
	}
}